#brew
brew --help
brew search htop
brew install htop
brew update
brew upgrade vim

#Download
wget address-url
git clone

#IO Redirection
ls -l > result.log === ls -l 1> result.log
ll 2> log.txt
rm foo 1> result.txt 2> error.txt

cat < hello.txt
cat > hello.txt

#append
ls -al >> log.txt

# << 다수의 Input
mail mail@domain.com << EOT

#etc
head -n1 name.txt === head -n1 < name.txt
head -n1 < name.txt > headline.txt

#연결 연산자 ;
ls;pwd

#echo
echo "hello'
echo $0 - 현재의 쉘 확인

#bash VS zsh - 부모는 같으며, zsh가 더 많은 기능을 제공

#touch - 파일 생성
touch a.log b.log c.log

#파일 복사
cp *.log bak

#명령어들 위치
/bin

#script sample
#!/bin/bash - bash로 만들었다.
if ! [ -d bak ]; then
        mkdir bak
fi
cp *.log bak

#파일에 실행권한 주기
chmod +x backup
chmod 600 ${target}

#파일 검색
locate *.log
find . -name test.txt
whereis
ls -alR /  > result.txt 2> error.log &

#OS 및 버전 확인
uname -a
cat /etc/*release*

#파일 설치
rpm                             //의존성 요구
rpm -ivh 소스명         //진행상황 확인하며 설치
rpm -qa | grep name     //패키지 설치 유무 확인
rpm -e name                     //삭제

yum - rpm 의존성 불필요 버전

#프로세스, 자원 검색
ps aux | grep ${target}
top
htop //Load average: 프로세스 점유율 관련 동작해야되는 프로세스 수 ${1분} ${5분} ${15분}
df -h, du
lsof -i tcp
netstat -antp | grep ${target}
nslookup
jobs

#background 프로세스 && daemon
ctrl + z //백그라운드로 넘기기
fg %${no}
kill -9 %${no}
ls -alR /  > result.txt 2> error.log & // & 백그라운드 실행
cd etc/init.d // 데몬 프로그램들이 위치
cd etc/rc3.d // 시스템 구동 시 동작하는 프로그램 리스트 S 시작, K 시작안함

#cron 정기적 실행
crontab -e // 등록
crontab -l // 목록
*/1 * * * * date >> date.log 2>&1

tail -f ~/log.log

#alias
alias ll = 'ls -al' //대소문자 구별함

#사용자 및 추가
id
who
su - root
sudo passwd -u / l root
useradd -m username //sudo로 해야됨
passwd username
sudo usermod -a -G sudo username //user에게 sudo 권한 주기